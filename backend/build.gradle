plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.github.node-gradle.node" version "3.0.1"
	//id "com.moowork.node" version "1.3.1"
	id 'java'
}

println "### project.projectDir: ${project.projectDir}"

node {
	version = '14.19.1'
	npmVersion = '8.6.0'
	workDir = file("${project.projectDir}/../frontend")
	npmWorkDir = file("${project.projectDir}/../frontend")
	nodeProjectDir = file("${project.projectDir}/../frontend")
	//nodeModulesDir = file("${project.projectDir}/../frontend")
}


group = 'com.starProject'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//apply plugin: 'com.github.node-gradle.node'

/**
 * vue-project를 build하기 위한 설정
 * - vue-project의 기존 빌드 결과물을 제거하기 위한 task
 */
task deleteVueBuildFiles(type: Delete) {
	description = "Delete"
    delete "src/main/resources/static", "src/main/resources/static/index.html"}

/**
 * vue-project를 build하기 위한 설정
 * - vue-project를 빌드하기 위한 npm build task
 *
 * dependsOn에 'deleteVueBuildFiles', 'npmInstall' task 정보를 지정하였으므로
 * npmBuild task는 위 두 task에 의존한다는 것이고,
 * npmBuild가 실행되기 전 위 두 task가 차례대로 먼저 실행됩니다.
 * deleteVueBuildFiles task는 빌드 결과물을 제거하기 위하여 별도 만든 task이고,
 * npmInstall task는 node plugin에서 제공하는 task입니다.
 */
task npmBuild(type: NpmTask, dependsOn: ['deleteVueBuildFiles']) {
	description = "Build"
    args = ["run", "build"]
}

/**
 * vue-project를 build하기 위한 설정
 * node gradle에서 제공하는 npmInstall task를 어느 시점에 실행시켜 줄지 지정해주는 것입니다.
 * "gradle build 시 수행되는 processResources task가 실행되기 전에 npmBuild task를 실행하라"
 *
 * 그리고 npmBuild task의 의존으로 deleteVueBuildFiles, npmInstall task가 있으므로,
 * "npmBuild task가 실행하기 전에 deleteVueBuildFiles, npmInstall task를 순서대로 실행하라."
 *
 * 정리한 task 실행 순서는
 * 1) deleteVueBuildFiles
 * 2) npmInstall
 * 3) npmBuild
 * 4) processResources
 * 입니다.
 */
//processResources.dependsOn 'npmBuild'

//task setUp(type: NpmTask){
//	description = "Install Node.js packages"
//	args = ['install']
//	inputs.files file('package.json')
//	outputs.files file('node_modules')
//}


//task buildFrontEnd(type: NpmTask, dependsOn: setUp) {
//	description = "Build vue.js"
//	args = ['run', 'build']
//}

//processResources.dependsOn 'buildFrontEnd'

tasks.named('test') {
	useJUnitPlatform()
}

